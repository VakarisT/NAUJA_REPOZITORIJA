#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>

using namespace std;

struct Stud {
    string Vard;
    string Pavard;
    vector<int> paz;
    int egz;
    float vid;
    float med;
};

void Skaityti(vector<Stud>& A, int& n);
double Median(Stud A, int n);

int main()
{
    vector<Stud> A;
    int N;
    Skaityti(A, N);
    cout << "Vardas  Pavarde         Galutinis(vid.) / Galutinis(med.)" << endl;
    cout << "---------------------------------------------------------" << endl;
    for (auto j = A.begin(); j != A.end(); j++)
    {
        cout << j->Vard << '\t' << j->Pavard << '\t';
        cout << fixed << setprecision(2) << 0.4 * j->vid + 0.6 * j->egz << '\t' << '\t' << '\t';
        cout << fixed << setprecision(2) << 0.4 * j->med + 0.6 * j->egz << '\n';
    }
    return 0;
}
void Skaityti(vector<Stud>& A, int& n)
{
    Stud st;
    string vardas;
    n = 0;
    int s = 0, i, p;
    cout << "Iveskite studento varda: "; cin >> vardas;
    while (vardas != "0") {
        st.Vard = vardas;
        cout << "Iveskite studento pavarde: "; cin >> st.Pavard;
        i = 0;
        s = 0;
        cout << "Iveskite tuos pazymius. Jei daugiau pazymiu nera, iveskite skaiciu '11': "; cin >> p;
        while (p != 11) {
            while (p < 0 || p > 11)
            {
                cout << "Iveskite tinkama pazymi: "; cin >> p;
            }
            st.paz.push_back(p);
            s += p;
            i++;
            cin >> p;
        }

        cout << "Iveskite egzamino pazymi: "; cin >> st.egz;
        while (st.egz < 0 || st.egz > 10)
        {
            cout << "Iveskite tinkama pazymi: "; cin >> st.egz;
        }

        if (i != 0) {
            st.vid = (float)s / i;
            st.med = Median(st, i);
        }
        else {
            st.vid = 0;
            st.med = 0;
        }
        cout << "Iveskite studento varda. Jei daugiau studentu nera, iveskite skaiciu '0': "; cin >> vardas;
        n++;
        A.push_back(st);}
    
}
double Median(Stud A, int n)
{
    sort(A.paz.begin(), A.paz.end());
    if (n % 2 == 0)
        return (double)A.paz[n / 2];
    else
        return (double)(A.paz[(n - 1) / 2] + A.paz[n / 2]) / 2.0;
}
