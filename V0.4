#include "Libr.h"
#include "Str.h"

void Skaityti(std::vector<Stud>& A);
float Median(Stud A);
void Rusiuoti(std::vector<Stud>& A);
void GenerF(int n, int p);

int main()
{
    std::vector<Stud> A;
    int N, r = 0;
    Skaityti(A);
    Rusiuoti(A);

    std::ofstream fout("kursiokai.txt");
    fout << "Vardas         Pavarde                  Galutinis(vid.) / Galutinis(med.)" << '\n';
    fout << "-------------------------------------------------------------------------" << '\n';
    for (auto j = A.begin(); j != A.end(); j++)
    {
        fout << j->Vard << std::setw(16) << j->Pavard << std::setw(10) << '\t';
        fout << std::fixed << std::setprecision(2) << j->vid << std::setw(18);
        fout << std::fixed << std::setprecision(2) << j->med << '\n';
    }
    fout.close();
    return 0;
}
void Skaityti(std::vector<Stud>& A)
{
    std::ifstream fin("studentai.txt");
    Stud st;
    std::string v;
    int n = 0;
    int p, i, s;
    while (v != "Egz.") {
        fin >> v;
        n++;
    }
    n -= 3;

    while (!fin.eof()) {
        fin >> st.Vard;
        fin >> st.Pavard;
        s = 0;
        for (i = 0; i < n; i++) {
            fin >> p;
            st.paz.push_back(p);
            s += p;
        }
        fin >> st.egz;
        if (n != 0) {
            st.vid = 0.4 * ((float)s / n) + 0.6 * st.egz;
            st.med = 0.4 * (float)Median(st) + 0.6 * st.egz;
        }
        else {
            st.vid = 0;
            st.med = 0;
        }
        A.push_back(st);
    }
    fin.close();
}
float Median(Stud A)
{
    sort(A.paz.begin(), A.paz.end());
    int n = A.paz.size();
    if (n % 2 == 0)
        return (float)A.paz[n / 2];
    else
        return (float)(A.paz[(n - 1) / 2] + A.paz[n / 2]) / 2.0;
}
void Rusiuoti(std::vector<Stud>& A)
{
    sort(A.begin(), A.end(),
        [](const Stud& a, const  Stud& b) { return (a.vid < b.vid); });
}
void GenerF(int n, int p)
{
    srand(time(NULL));
    ofstream fout("Studentai.txt", ios::app);
    fout << Vardas << " " << Pavarde << std::setw(10) << " ";
    for (int i = 0; i < p; i++)
        fout << "ND" << i << " ";
    fout << "Egz." << '\n';
    
    for (int ii = 0; ii < n; ii++)
    {
        fout << "Vardas" << ii << " " << "Pavarde" << ii << " ";
        for (int iii = 0; iii < p + 1; iii++)
            fout << rand() % 11 << " ";
        fout << '\n';
    }
    fout.close();
}
