#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <fstream>

using namespace std;

struct Stud {
    string Vard;
    string Pavard;
    vector<int> paz;
    int egz;
    float vid;
    float med;
};

void Skaityti(vector<Stud>& A);
double Median(Stud A);
void Rusiuoti(vector<Stud>& A, int r);

int main()
{
    vector<Stud> A;
    int N , r = 0;
    Skaityti(A);
    cout << "Pagal ka norite rusiuoti?" << endl;
    cout << "Pagal vardus - 1" << endl;
    cout << "Pagal pavardes - 2" << endl;
    cout << "Pagal galutini su vidurkiais - 3" << endl;
    cout << "Pagal galutini su medianomis - 4" << endl;

    while(r < 1 || r > 4)
        cin >> r;

    Rusiuoti(A, r);

    ofstream fout("kursiokai.txt");
    fout << "Vardas         Pavarde                  Galutinis(vid.) / Galutinis(med.)" << endl;
    fout << "-------------------------------------------------------------------------" << endl;
    for (auto j = A.begin(); j != A.end(); j++)
    {
        fout << j->Vard << setw(16) << j->Pavard << setw(10) << '\t';
        fout << fixed << setprecision(2) << j->vid << setw(18);
        fout << fixed << setprecision(2) << j->med << '\n';
    }
    fout.close();
    return 0;
}
void Skaityti(vector<Stud>& A)
{
    ifstream fin("studentai.txt");
    Stud st;
    string v;
    int n = 0;
    int p , i , s;
    while(v != "Egz."){
        fin >> v;
        n++;
    }
    n -= 3;

    while(true) {
        fin >> st.Vard;
        if (fin.eof()) break;
        fin >> st.Pavard;
        s = 0;
        for (i = 0; i < n; i++) {
            fin >> p;
            st.paz.push_back(p);
            s += p;
        }

        fin >> st.egz;

        if (n != 0) {
            st.vid = 0.4 * ((float)s / n) + 0.6 * st.egz;
            st.med = 0.4 * (float)Median(st) + 0.6 * st.egz;
        }
        else {
            st.vid = 0;
            st.med = 0;
        }
        A.push_back(st);
    }
    fin.close();
}
double Median(Stud A)
{
    sort(A.paz.begin(), A.paz.end());
    int n = A.paz.size();
    if (n % 2 == 0)
        return (double)A.paz[n / 2];
    else
        return (double)(A.paz[(n - 1) / 2] + A.paz[n / 2]) / 2.0;
}
void Rusiuoti(vector<Stud>& A, int r)
{
    switch (r) {
    case 1:
        sort(A.begin(), A.end(),
            [](const Stud& a, const Stud& b) { return (a.Vard < b.Vard); });
        break;
    case 2:
        sort(A.begin(), A.end(),
            [](const Stud& a, const Stud& b) { return (a.Pavard < b.Pavard); });
        break;
    case 3:
        sort(A.begin(), A.end(),
            [](const Stud& a, const  Stud& b) { return (a.vid < b.vid); });
        break;
    case 4:
        sort(A.begin(), A.end(),
            [](const Stud& a, const Stud& b) { return (a.med < b.med); });
        break;
    }
}
